{
  "version": 3,
  "sources": ["../bin/live-reload.js", "../src/components/mc-quiz/mc-quiz.ts", "../src/index.ts"],
  "sourcesContent": ["new EventSource(`${SERVE_ORIGIN}/esbuild`).addEventListener('change', () => location.reload());\n", "export class MultipleChoiceQuiz {\n  static ATTRIBUTE_NAME: string = 'wf-quiz-mc';\n  static ANSWER_ATTRIBUTE_NAME: string = 'wf-quiz-mc-answer';\n  static CORRECT_ANSWER_CLASS_COMBO: string = 'is-correct';\n  static INCORRECT_ANSWER_CLASS_COMBO: string = 'is-wrong';\n\n  private quizElement: HTMLElement;\n  private answer: number;\n  private inputElements: NodeListOf<HTMLInputElement>;\n  private submitButton: HTMLButtonElement | null;\n  private questionWrapperElement: HTMLElement;\n  private correctWrapperElement: HTMLElement;\n  private incorrectWrapperElement: HTMLElement;\n  private quizParentElement: HTMLElement | null;\n\n  constructor(quizElement: HTMLElement) {\n    this.quizElement = quizElement;\n\n    const answerAttribute = quizElement.getAttribute(MultipleChoiceQuiz.ANSWER_ATTRIBUTE_NAME);\n    this.answer = answerAttribute ? parseInt(answerAttribute, 10) : NaN;\n\n    this.inputElements = quizElement.querySelectorAll<HTMLInputElement>('input');\n    this.submitButton = quizElement.querySelector<HTMLButtonElement>('button');\n    this.questionWrapperElement = quizElement.children[0] as HTMLElement;\n    this.correctWrapperElement = quizElement.children[1] as HTMLElement;\n    this.incorrectWrapperElement = quizElement.children[2] as HTMLElement;\n    this.quizParentElement = quizElement.parentElement;\n\n    // Initialize the quiz\n    this.setup();\n  }\n\n  private setup(): void {\n    if (!this.isValidQuiz()) {\n      console.error(\n        `Quiz ${this.quizElement.getAttribute(MultipleChoiceQuiz.ATTRIBUTE_NAME)} is invalid.`\n      );\n      return;\n    }\n\n    // Attach event listener\n    this.submitButton?.addEventListener('click', () => this.checkAnswer());\n  }\n\n  private isValidQuiz(): boolean {\n    if (\n      isNaN(this.answer) ||\n      this.inputElements.length === 0 ||\n      !this.submitButton ||\n      !this.correctWrapperElement ||\n      !this.incorrectWrapperElement\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  private checkAnswer(): void {\n    let selectedAnswerIndex = -1;\n\n    this.inputElements.forEach((input, index) => {\n      if (input.checked) {\n        selectedAnswerIndex = index;\n      }\n    });\n\n    const oneIndexedSelectedAnswer = selectedAnswerIndex + 1;\n\n    if (oneIndexedSelectedAnswer === this.answer) {\n      this.showFeedback(true);\n    } else {\n      this.showFeedback(false);\n    }\n  }\n\n  private showFeedback(isCorrect: boolean): void {\n    // Show the correct or incorrect wrapper based on the answer\n    this.questionWrapperElement.setAttribute('wf-cloak', '1');\n\n    if (this.quizParentElement) {\n      if (isCorrect) {\n        this.correctWrapperElement.removeAttribute('wf-cloak');\n        this.quizParentElement.classList.add(MultipleChoiceQuiz.CORRECT_ANSWER_CLASS_COMBO);\n      } else {\n        this.incorrectWrapperElement.removeAttribute('wf-cloak');\n        this.quizParentElement.classList.add(MultipleChoiceQuiz.INCORRECT_ANSWER_CLASS_COMBO);\n      }\n    }\n  }\n\n  static initializeAll(): void {\n    console.log('Initializing all quizzes on the page');\n    const quizzes = document.querySelectorAll<HTMLElement>(\n      `[${MultipleChoiceQuiz.ATTRIBUTE_NAME}]`\n    );\n    quizzes.forEach((quizElement) => new MultipleChoiceQuiz(quizElement));\n  }\n}\n", "import { MultipleChoiceQuiz } from '$components/mc-quiz/mc-quiz';\n\ndeclare global {\n  interface Window {\n    __wfuScriptsLoaded?: boolean; // Declare a global flag to ensure the script runs only once\n  }\n}\n\nif (!window.__wfuScriptsLoaded) {\n  window.__wfuScriptsLoaded = true; // Add a global flag to ensure the script runs only once\n\n  window.Webflow ||= [];\n  window.Webflow.push(() => {\n    // Initialize all quizzes on the page\n    MultipleChoiceQuiz.initializeAll();\n  });\n}\n"],
  "mappings": ";;;AAAA,MAAI,YAAY,GAAG,uBAAY,UAAU,EAAE,iBAAiB,UAAU,MAAM,SAAS,OAAO,CAAC;;;ACAtF,MAAM,qBAAN,MAAM,oBAAmB;AAAA,IAC9B,OAAO,iBAAyB;AAAA,IAChC,OAAO,wBAAgC;AAAA,IACvC,OAAO,6BAAqC;AAAA,IAC5C,OAAO,+BAAuC;AAAA,IAEtC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IAER,YAAY,aAA0B;AACpC,WAAK,cAAc;AAEnB,YAAM,kBAAkB,YAAY,aAAa,oBAAmB,qBAAqB;AACzF,WAAK,SAAS,kBAAkB,SAAS,iBAAiB,EAAE,IAAI;AAEhE,WAAK,gBAAgB,YAAY,iBAAmC,OAAO;AAC3E,WAAK,eAAe,YAAY,cAAiC,QAAQ;AACzE,WAAK,yBAAyB,YAAY,SAAS,CAAC;AACpD,WAAK,wBAAwB,YAAY,SAAS,CAAC;AACnD,WAAK,0BAA0B,YAAY,SAAS,CAAC;AACrD,WAAK,oBAAoB,YAAY;AAGrC,WAAK,MAAM;AAAA,IACb;AAAA,IAEQ,QAAc;AACpB,UAAI,CAAC,KAAK,YAAY,GAAG;AACvB,gBAAQ;AAAA,UACN,QAAQ,KAAK,YAAY,aAAa,oBAAmB,cAAc,CAAC;AAAA,QAC1E;AACA;AAAA,MACF;AAGA,WAAK,cAAc,iBAAiB,SAAS,MAAM,KAAK,YAAY,CAAC;AAAA,IACvE;AAAA,IAEQ,cAAuB;AAC7B,UACE,MAAM,KAAK,MAAM,KACjB,KAAK,cAAc,WAAW,KAC9B,CAAC,KAAK,gBACN,CAAC,KAAK,yBACN,CAAC,KAAK,yBACN;AACA,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAAA,IAEQ,cAAoB;AAC1B,UAAI,sBAAsB;AAE1B,WAAK,cAAc,QAAQ,CAAC,OAAO,UAAU;AAC3C,YAAI,MAAM,SAAS;AACjB,gCAAsB;AAAA,QACxB;AAAA,MACF,CAAC;AAED,YAAM,2BAA2B,sBAAsB;AAEvD,UAAI,6BAA6B,KAAK,QAAQ;AAC5C,aAAK,aAAa,IAAI;AAAA,MACxB,OAAO;AACL,aAAK,aAAa,KAAK;AAAA,MACzB;AAAA,IACF;AAAA,IAEQ,aAAa,WAA0B;AAE7C,WAAK,uBAAuB,aAAa,YAAY,GAAG;AAExD,UAAI,KAAK,mBAAmB;AAC1B,YAAI,WAAW;AACb,eAAK,sBAAsB,gBAAgB,UAAU;AACrD,eAAK,kBAAkB,UAAU,IAAI,oBAAmB,0BAA0B;AAAA,QACpF,OAAO;AACL,eAAK,wBAAwB,gBAAgB,UAAU;AACvD,eAAK,kBAAkB,UAAU,IAAI,oBAAmB,4BAA4B;AAAA,QACtF;AAAA,MACF;AAAA,IACF;AAAA,IAEA,OAAO,gBAAsB;AAC3B,cAAQ,IAAI,sCAAsC;AAClD,YAAM,UAAU,SAAS;AAAA,QACvB,IAAI,oBAAmB,cAAc;AAAA,MACvC;AACA,cAAQ,QAAQ,CAAC,gBAAgB,IAAI,oBAAmB,WAAW,CAAC;AAAA,IACtE;AAAA,EACF;;;ACzFA,MAAI,CAAC,OAAO,oBAAoB;AAC9B,WAAO,qBAAqB;AAE5B,WAAO,YAAY,CAAC;AACpB,WAAO,QAAQ,KAAK,MAAM;AAExB,yBAAmB,cAAc;AAAA,IACnC,CAAC;AAAA,EACH;",
  "names": []
}
